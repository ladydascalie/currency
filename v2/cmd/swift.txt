import UIKit

struct Currency {
    /// The `ISO 4217` currency code
    var code: String

    /// The number of digits to display after the decimal point when displaying the currency
    var minorUnits: Int

    /// The factor to divide the currency figure by before handing to a currency formatter
    var factor: Int

    /// The `ISO 4217` currency name
    var name: String
}

class Currencies {
    {{ range $k, $v := . -}}
        static let {{$v.Code}}: Currency = Currency(code: "{{$v.Code}}", minorUnits: {{$v.Units}}, factor: {{$v.Factor}}, name: "{{$v.Name}}")
    {{ end }}

    static let allCurrencies: [String: Currency] =
        [
            {{- $n := len . }}
            {{ range $k, $v := . -}}
                "{{$v.Code}}": {{$v.Code}}{{if eq (inc $k) $n}}{{else}}{{if $k}},{{end}}{{if eq $k 0}},{{end}}{{end}}
            {{ end -}}
        ]

    /// Look up a currency struct containing currency and formatting information
    ///
    /// - Parameter code: The `ISO 4217` currency code to search for
    /// - Returns: A `Currency` object, if supported. Otherwise nil.
    class func currency(for code: String) -> Currency? {
        return allCurrencies[code]
    }
}
